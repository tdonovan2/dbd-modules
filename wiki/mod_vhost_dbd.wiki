Configuring and using mod_vhost_dbd

= Introduction =
mod_vhost_dbd has one directive:

==== DBDocRoot    QUERY    [ PARAM ... ] ====

mod_vhost_dbd sets the document root directory for a request to a value returned by a SQL query.

The query must return the document root directory name as the first column.
{{{
DBDocRoot "SELECT WebDir FROM WebTable WHERE WebName = ?"  HOSTNAME
}}}
DBDocRoot can be used at the Server or the Virtual Host level.


= Details =
*QUERY* is an SQL statement which returns one row with the document root directory name in the first column.

*PARAM ...* arguments are inserted into the SQL statement at request time.  Use one *PARAM* for each parameter marker in your SQL statement.  In the examples, *?* is the parameter marker.  *PARAM* may be any of these words (space separated, not case sensitive):
|| *HOSTNAME*||Hostname||The Hostname may be NULL if there is no Host header. e.g. HTTP 1.0 requests||
|| *IP*||Host IP address||as a string||
|| *PORT*||port number||as string||
|| *URI*||The request URI||
|| *URI`n`* _where_ *`n`* _is 1-9_ ||Pass only the first `n` segments of the URI to the query||

  * You must have an Apache [http://people.apache.org/~niq/dbd.html DBD driver] and [http://httpd.apache.org/docs/2.3/mod/mod_dbd.html mod_dbd] loaded and configured to use mod_vhost_dbd.

  * Use [http://httpd.apache.org/docs/2.3/mod/mod_so.html#loadmodule LoadModule] to enable mod_vhost_dbd.
{{{
LoadModule vhost_dbd_module modules/mod_vhost_dbd.so 
}}}

  * Do not put a semicolon at the end of your SQL statement.

  * *PARAM* names can be used repeated as necessary. For example: to only look up hosts containing ".acme.":
{{{
        DBDocRoot "SELECT DocRoot FROM myTable WHERE ? LIKE '%.acme.%' AND Host = ?" HOSTNAME HOSTNAME
}}}

  * *DBDocRoot* can use the name of a statement previously defined with the DBDPrepareSQL directive as the *QUERY*. For example:
{{{
DBDPrepareSQL "SELECT WebDir FROM WebTable WHERE WebName = ?"  HostLookup
...
DBDocRoot HostLookup  HOSTNAME
}}}

  * For Apache 2.2 use parameter markers appropriate to your database.  For example: Use *?* for [http://odbc-dbd.googlecode.com/ ODBC] or SQLite.  Use *%s* for MySQL, etc.

  * For Apache 2.3+ always use *%s* as a parameter marker in your SQL statement.

  * For Apache 2.3+, any additional columns which are returned will set an environment variable with the same name as the column name. If the column value is NULL, any existing environment variable which matches the column name will be unset.

  * Using a URI *PARAM* increases the number of database queries required because each request requires a new query. Using only the leading portion of the URI can reduce the number of queries. When multiple requests are made on the same keep-alive connection which have the same URI`n` value, only one query is needed.

  * If the URI is /alpha/beta/gamma/delta/index.html:
{{{
   URI1 is /alpha
   URI2 is /alpha/beta
   URI3 is /alpha/beta/gamma
   ...
   URI5 is /alpha/beta/gamma/delta/index.html
   URI6 is /alpha/beta/gamma/delta/index.html
   ...
   URI9 is /alpha/beta/gamma/delta/index.html
}}}

  * If [http://httpd.apache.org/modules/ mod_ftp] is used, an additional *PARAM* name is available.  *FTPUSER* can be specified to pass the logged-in FTP user name.  
